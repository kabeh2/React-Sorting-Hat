{"version":3,"sources":["assets/the_sorting_hat_by_sahinduezguen.png","assets/hufflepuff-crest.png","assets/ravenclaw-crest.png","assets/slytherin-crest.png","assets/gryffindor-crest.png","components/Welcome.js","components/models/QuestionsModel.js","components/Questions.js","components/Results.js","components/models/ResultsModel.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Welcome","React","forwardRef","_ref","ref","onMouseEnter","onMouseLeave","hat","location","onClick","mode","react_default","a","createElement","className","src","alt","react_router_dom","to","concat","key","QuestionsModel","id","question","set","answers","value","answer","count","Questions","show","onSubmit","onChange","questionsArr","map","e","index","name","type","checked","disabled","Fragment","Results","results","crest","style","backgroundColor","colours","color","team","textTransform","letterSpacing","traits","popular","ResultsModel","Hufflepuff","Ravenclaw","Slytherin","Gryffindor","initialState","questions","1","2","3","4","5","6","showResults","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleHoverEnter","enterRef","current","classList","handleHoverLeave","handleWelcomeClick","setState","state","handleAnswerChange","_objectSpread","defineProperty","target","handleSubmit","_objectSpread3","preventDefault","updatedCount","handleResults","_objectSpread4","appRef","handleReset","createRef","updateDimensions","w","window","d","document","documentElement","body","getElementsByTagName","width","innerWidth","clientWidth","_this2","_this$state","react_router","components_Results","components_Questions","path","render","props","components_Welcome","assign","Hat","Component","ReactDOM","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.f41efa91.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/the_sorting_hat_by_sahinduezguen.7243f6fa.png\";","module.exports = __webpack_public_path__ + \"static/media/hufflepuff-crest.db5ee7e3.png\";","module.exports = __webpack_public_path__ + \"static/media/ravenclaw-crest.8f9cd239.png\";","module.exports = __webpack_public_path__ + \"static/media/slytherin-crest.43c52107.png\";","module.exports = __webpack_public_path__ + \"static/media/gryffindor-crest.3efe6c36.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Welcome = React.forwardRef(\n  ({ onMouseEnter, onMouseLeave, hat, location, onClick, mode }, ref) => {\n    return (\n      <div className=\"welcome-container\">\n        <h1>Welcome to the Great Hall of Hogwarts!</h1>\n        <div\n          className=\"sorting-hat--container\"\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n        >\n          <img className=\"sorting-hat\" src={hat} alt=\"Sorting Hat\" />\n          <Link to={`/questions/${location.key}`}>\n            <button\n              className={mode === \"mobile\" ? \"btn\" : \"exitRef btn\"}\n              ref={ref}\n              onClick={onClick}\n            >\n              <h2>Find Out Your House...</h2>\n            </button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default Welcome;\n","export const QuestionsModel = [\n  {\n    id: 1,\n    question: \"What is your favourite colour?\",\n    set: \"one\",\n    answers: [\n      {\n        value: \"a\",\n        answer: \"Yellow\",\n        count: 1\n      },\n      {\n        value: \"b\",\n        answer: \"Blue\",\n        count: 2\n      },\n      {\n        value: \"c\",\n        answer: \"Green\",\n        count: 3\n      },\n      {\n        value: \"d\",\n        answer: \"Red\",\n        count: 4\n      }\n    ]\n  },\n  {\n    id: 2,\n    question: \"Who is your favourite Character?\",\n    set: \"two\",\n    answers: [\n      {\n        value: \"a\",\n        answer: \"Newt Scamander\",\n        count: 1\n      },\n      {\n        value: \"b\",\n        answer: \"Gilderoy Lockheart\",\n        count: 2\n      },\n      {\n        value: \"c\",\n        answer: \"Lord Voldemort\",\n        count: 3\n      },\n      {\n        value: \"d\",\n        answer: \"Harry Potter\",\n        count: 4\n      }\n    ]\n  },\n  {\n    id: 3,\n    question: \"What trait best describes you?\",\n    set: \"three\",\n    answers: [\n      {\n        value: \"a\",\n        answer: \"Loyal\",\n        count: 1\n      },\n      {\n        value: \"b\",\n        answer: \"Witty\",\n        count: 2\n      },\n      {\n        value: \"c\",\n        answer: \"Ambitious\",\n        count: 3\n      },\n      {\n        value: \"d\",\n        answer: \"Bravery\",\n        count: 4\n      }\n    ]\n  },\n  {\n    id: 4,\n    question:\n      \"What is your second favourite colour out of the below selection?\",\n    set: \"four\",\n    answers: [\n      {\n        value: \"a\",\n        answer: \"Black\",\n        count: 1\n      },\n      {\n        value: \"b\",\n        answer: \"Bronze\",\n        count: 2\n      },\n      {\n        value: \"c\",\n        answer: \"Silver\",\n        count: 3\n      },\n      {\n        value: \"d\",\n        answer: \"Gold\",\n        count: 4\n      }\n    ]\n  },\n  {\n    id: 5,\n    question: \"Who's house story do you enjoy the most?\",\n    set: \"five\",\n    answers: [\n      {\n        value: \"a\",\n        answer: \"Helga Hufflepuff\",\n        count: 1\n      },\n      {\n        value: \"b\",\n        answer: \"Rowena Ravenclaw\",\n        count: 2\n      },\n      {\n        value: \"c\",\n        answer: \"Salazar Slytherin\",\n        count: 3\n      },\n      {\n        value: \"d\",\n        answer: \"Godric Gryffindor\",\n        count: 4\n      }\n    ]\n  },\n  {\n    id: 6,\n    question: \"What is another trait that best describes you?\",\n    set: \"six\",\n    answers: [\n      {\n        value: \"a\",\n        answer: \"Dedicated\",\n        count: 1\n      },\n      {\n        value: \"b\",\n        answer: \"Intelligent\",\n        count: 2\n      },\n      {\n        value: \"c\",\n        answer: \"Resourceful\",\n        count: 3\n      },\n      {\n        value: \"d\",\n        answer: \"Daring\",\n        count: 4\n      }\n    ]\n  }\n];\n","import React from \"react\";\nimport { QuestionsModel } from \"./models/QuestionsModel\";\n\nconst Questions = ({ show, answers, onClick, onSubmit, onChange }) => {\n  let questionsArr = QuestionsModel.map(question => {\n    if (show[question.id] && question.id) {\n      return (\n        <div\n          className={`question-container question-container-${question.id}`}\n          key={question.id}\n        >\n          <h3>{`${question.id}. ${question.question} `}</h3>\n          <form\n            onSubmit={\n              question.id === 6\n                ? e => onClick(e, question.set, question.id)\n                : e => onSubmit(e, question.set, question.id)\n            }\n          >\n            <ul className=\"answer-container\">\n              {question.answers.map((answer, index) => {\n                return (\n                  <li key={index}>\n                    <label>\n                      <input\n                        name=\"radioGroup\"\n                        type=\"radio\"\n                        value={answer.value}\n                        checked={answers[question.set] === answer.value}\n                        onChange={e => onChange(e, question.set)}\n                      />\n                      {answer.answer}\n                    </label>\n                  </li>\n                );\n              })}\n            </ul>\n\n            <button\n              type=\"submit\"\n              disabled={answers[question.set] ? false : true}\n            >\n              {question.id === 6 ? \"Submit\" : \"Next\"}\n            </button>\n            {/* Below code is to help calculate total count of each answer */}\n            {/* <h1>{`Updated Count: ${props.count}`}</h1> */}\n          </form>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  });\n  return <>{questionsArr}</>;\n};\n\nexport default Questions;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Results = ({ results, onClick }) => {\n  return (\n    <>\n      <div className=\"crest-container\">\n        <img src={results.crest} alt=\"Team Crest\" />\n      </div>\n      <div\n        className=\"result-container\"\n        style={{\n          backgroundColor: results.colours[1],\n          color: results.team === \"Hufflepuff House\" ? \"white\" : \"initial\"\n        }}\n      >\n        <h3>Congratulations! You are on Team:</h3>\n        <h2\n          style={{\n            color:\n              results.team === \"Slytherin House\"\n                ? \"#287233\"\n                : results.team === \"Gryffindor House\"\n                ? \"#560319\"\n                : results.colours[0],\n            textTransform: \"uppercase\",\n            letterSpacing: \"1px\"\n          }}\n        >\n          {results.team ? `${results.team}` : \"Team: TBD\"}\n        </h2>\n        <ul>\n          <li\n            style={{ textTransform: \"capitalize\" }}\n          >{`Traits: ${results.traits}`}</li>\n          <li>{`Most Popular: ${results.popular}`}</li>\n        </ul>\n\n        <Link to=\"/welcome\">\n          <button\n            onClick={onClick}\n            style={{\n              color: results.team === \"Hufflepuff House\" ? \"white\" : \"initial\"\n            }}\n          >\n            Restart\n          </button>\n        </Link>\n      </div>\n    </>\n  );\n};\n\nexport default Results;\n","import Hufflepuff from \"../../assets/hufflepuff-crest.png\";\nimport Ravenclaw from \"../../assets/ravenclaw-crest.png\";\nimport Slytherin from \"../../assets/slytherin-crest.png\";\nimport Gryffindor from \"../../assets/gryffindor-crest.png\";\n\nexport const ResultsModel = {\n  Hufflepuff: {\n    team: \"Hufflepuff House\",\n    traits: [\"Dedicated\", \" hard workers\", \" loyal\"],\n    popular: \"Newt Scamander\",\n    colours: [\"yellow\", \"black\"],\n    crest: Hufflepuff\n  },\n  Ravenclaw: {\n    team: \"Ravenclaw House\",\n    traits: [\"intelligent\", \" witty \"],\n    popular: \"Gilderoy Lockheart\",\n    colours: [\"blue\", \"#cd7f32\"],\n    crest: Ravenclaw\n  },\n  Slytherin: {\n    team: \"Slytherin House\",\n    traits: [\"cunning\", \" ambitious\", \" resourceful\"],\n    popular: \"Lord Voldemort\",\n    colours: [\"emerald\", \"silver\"],\n    crest: Slytherin\n  },\n  Gryffindor: {\n    team: \"Gryffindor House\",\n    traits: [\"Bravery\", \" daring\", \" chivalry\"],\n    popular: \"Albus Dumbledore & Harry Potter\",\n    colours: [\"scarlet\", \"gold\"],\n    crest: Gryffindor\n  }\n};\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Hat from \"./assets/the_sorting_hat_by_sahinduezguen.png\";\nimport \"./App.scss\";\nimport Welcome from \"./components/Welcome\";\nimport Questions from \"./components/Questions\";\nimport Results from \"./components/Results\";\nimport { ResultsModel } from \"./components/models/ResultsModel\";\n\nconst initialState = {\n  count: 0,\n  questions: false,\n  answers: {},\n  results: {},\n  show: {\n    1: true,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false\n  },\n  showResults: false,\n  mode: \"mobile\"\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ...initialState\n    };\n    this.enterRef = React.createRef();\n    this.appRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.updateDimensions();\n  }\n\n  handleHoverEnter = () => {\n    this.enterRef.current.classList = \"enterRef\";\n  };\n\n  handleHoverLeave = () => {\n    this.enterRef.current.classList = \"exitRef\";\n  };\n\n  handleWelcomeClick = () => {\n    this.setState({\n      questions: !this.state.questions\n    });\n  };\n\n  handleAnswerChange = (e, set) => {\n    this.setState({\n      answers: {\n        ...this.state.answers,\n        [set]: e.target.value\n      }\n    });\n  };\n\n  handleSubmit = (e, set, id) => {\n    e.preventDefault();\n\n    let updatedCount = this.state.count;\n\n    switch (this.state.answers[set]) {\n      case \"a\":\n        this.setState({\n          count: (updatedCount += 1)\n        });\n        break;\n      case \"b\":\n        this.setState({\n          count: (updatedCount += 2)\n        });\n        break;\n      case \"c\":\n        this.setState({\n          count: (updatedCount += 3)\n        });\n        break;\n      case \"d\":\n        this.setState({\n          count: (updatedCount += 4)\n        });\n        break;\n      default:\n        return null;\n    }\n\n    this.setState({\n      show: {\n        ...this.state.show,\n        [id]: !this.state.show[id],\n        [id + 1]: !this.state.show[id + 1]\n      }\n    });\n  };\n\n  handleResults = (e, set, id) => {\n    e.preventDefault();\n\n    let updatedCount = this.state.count;\n\n    // Have to update count again as the last question only has\n    // one submit button so user can click once and get their answer\n    // instead of click button to update then click button for results\n    switch (this.state.answers[set]) {\n      case \"a\":\n        this.setState({\n          count: (updatedCount += 1)\n        });\n        break;\n      case \"b\":\n        this.setState({\n          count: (updatedCount += 2)\n        });\n        break;\n      case \"c\":\n        this.setState({\n          count: (updatedCount += 3)\n        });\n        break;\n      case \"d\":\n        this.setState({\n          count: (updatedCount += 4)\n        });\n        break;\n      default:\n        return null;\n    }\n\n    if (updatedCount < 12) {\n      this.setState({\n        results: ResultsModel.Hufflepuff\n      });\n      // Change styling to selected team colours\n      this.appRef.current.classList = \"App App_team--1\";\n    } else if (11 < updatedCount && updatedCount < 17) {\n      this.setState({\n        results: ResultsModel.Ravenclaw\n      });\n      // Change styling to selected team colours\n      this.appRef.current.classList = \"App App_team--2\";\n    } else if (16 < updatedCount && updatedCount < 21) {\n      this.setState({\n        results: ResultsModel.Slytherin\n      });\n      // Change styling to selected team colours\n      this.appRef.current.classList = \"App App_team--3\";\n    } else if (updatedCount > 20) {\n      this.setState({\n        results: ResultsModel.Gryffindor\n      });\n      // Change styling to selected team colours\n      this.appRef.current.classList = \"App App_team--4\";\n    } else {\n      return null;\n    }\n\n    this.setState({\n      show: {\n        ...this.state.show,\n        [id]: !this.state.show[id],\n        [id + 1]: !this.state.show[id + 1]\n      },\n      showResults: true\n    });\n  };\n\n  handleReset = () => {\n    this.setState({\n      ...initialState\n    });\n    this.appRef.current.classList = \"App\";\n  };\n\n  updateDimensions() {\n    let w = window;\n    let d = document;\n    let documentElement = d.documentElement;\n    let body = d.getElementsByTagName(\"body\")[0];\n    let width = w.innerWidth || documentElement.clientWidth || body.clientWidth;\n\n    let mode = \"\";\n\n    if (width <= 480) {\n      mode = \"mobile\";\n    } else if (width <= 768) {\n      mode = \"tablet\";\n    } else {\n      mode = \"desktop\";\n    }\n\n    this.setState({\n      mode: mode\n    });\n  }\n\n  render() {\n    const {\n      questions,\n      showResults,\n      count,\n      answers,\n      show,\n      results\n    } = this.state;\n\n    return (\n      <div className=\"App\" ref={this.appRef}>\n        <Switch>\n          {!questions ? (\n            <Route\n              path=\"/welcome\"\n              render={props => (\n                <Welcome\n                  mode={this.state.mode}\n                  onMouseEnter={\n                    this.state.mode === \"mobile\" ? null : this.handleHoverEnter\n                  }\n                  onMouseLeave={\n                    this.state.mode === \"mobile\" ? null : this.handleHoverLeave\n                  }\n                  hat={Hat}\n                  ref={this.enterRef}\n                  onClick={this.handleWelcomeClick}\n                  {...props}\n                />\n              )}\n            />\n          ) : !showResults ? (\n            <Questions\n              count={count}\n              answers={answers}\n              onChange={this.handleAnswerChange}\n              onSubmit={this.handleSubmit}\n              show={show}\n              onClick={this.handleResults}\n            />\n          ) : (\n            <Results onClick={this.handleReset} results={results} />\n          )}\n          <Redirect to=\"/welcome\" />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}